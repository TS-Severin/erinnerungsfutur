// ICal generator

//npm install ical-generator

// utils/calendar.js

const ical = require('ical-generator');

/**
 * Generate an iCalendar (.ics) file for a given event.
 * @param {Object} event The event data.
 * @returns {string} The iCalendar file content.
 */
function generateICalFile(event) {
    const cal = ical({
        domain: 'your-website.com',
        name: event.title,
    });

    cal.createEvent({
        start: event.startDate,
        end: event.endDate,
        summary: event.title,
        description: event.description,
        location: event.location,
    });

    return cal.toString();
}

module.exports = { generateICalFile };



// pages/api/events/[eventId].js

import { getEventData } from '../../../utils/calendar'; // Assuming you have a function to fetch event data
import { generateICalFile } from '../../../utils/calendar'; // Assuming you have a function to generate iCal files

export default async function handler(req, res) {
    const { eventId } = req.query;

    try {
        // Fetch event data based on the eventId
        const event = await getEventData(eventId);

        if (!event) {
            return res.status(404).json({ error: 'Event not found' });
        }

        // Generate iCal file based on event data
        const iCalData = generateICalFile(event);

        // Set response headers
        res.setHeader('Content-Type', 'text/calendar');
        res.setHeader('Content-Disposition', `attachment; filename="${eventId}.ics"`);

        // Send iCal data as response
        res.status(200).send(iCalData);
    } catch (error) {
        console.error('Error generating iCal file:', error);
        res.status(500).json({ error: 'Internal server error' });
    }
}


// ICal generator

//npm install ical-generator

// utils/calendar.js

const ical = require('ical-generator');

/**
 * Generate an iCalendar (.ics) file for a given event.
 * @param {Object} event The event data.
 * @returns {string} The iCalendar file content.
 */
function generateICalFile(event) {
    const cal = ical({
        domain: 'your-website.com',
        name: event.title,
    });

    cal.createEvent({
        start: event.startDate,
        end: event.endDate,
        summary: event.title,
        description: event.description,
        location: event.location,
    });

    return cal.toString();
}

module.exports = { generateICalFile };


// function which should work

// Function to generate iCalendar files for each event
export default function GenerateICalFiles() {
    // Fetch calendar data from API
    const { data: entries, isLoading } = useSWR("/api");

    // Use map to generate iCalendar files for each event

    const iCalFiles = entries.map((eventData) => {

        // Create a new iCalendar instance for each event
        const cal = ical();

        // Create an iCalendar event
        cal.createEvent({
            start: eventData.date,
            end: eventData.date,
            summary: eventData.title
        });

        // Return the iCalendar file content
        return cal.toString();
        // });

        // Return the array of iCalendar file contents
        return { entries };

    }